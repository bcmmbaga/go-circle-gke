version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/node:10
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm test
      - store_test_results:
          path: test-results
  deploy_to_stage:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Testing running shell
          command: bash scripts/setup
  deploy_to_prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo ${GCP_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud container clusters get-credentials go-circle-gke --zone us-central1-a --project cd-pipeline-test

      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build and push to registry 
          command: |
            docker build \
            --build-arg COMMIT_REF=${CIRCLE_SHA1} \
            --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%S”` \
            -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} eu.gcr.io/${PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker push eu.gcr.io/${PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
      - run:
          name: Deploy to kubernetes cluster
          command: |
            envsubst < deploy.yml > deploy_prod.yml
            kubectl apply -f deploy_prod.yml
            kubectl rollout status deployment/${PROJECT_NAME}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_stage:
          requires:
            - build_and_test
          filters:
            branches:
              only: staging
      - deploy_to_prod:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
